//Given a string, return true if the number of appearances of "is" anywhere in the string is equal to the number of appearances of "not" anywhere in the string 
public boolean equalIsNot(String str) {
  int countIs = 0;
  int countNot = 0;
  str += " ";

   for (int i = 0; i < str.length() -2 ; i++) {
     if (str.substring(i, i+2).equals("is")) countIs++;
     if (str.substring(i, i+3).equals("not")) countNot++;
   }
     return (countIs == countNot);
}

//Given an array of ints, return true if the sum of all the 2's in the array is exactly 8.
public boolean sum28(int[] nums) {
    int count=0;
  for(int i=0;i<nums.length;i++){
    if(nums[i]==2)
    count++;

  }
   if(count==4)
    return true;
    else 
    return false;

}

//Given a non-empty array, return true if there is a place to split the array so that the sum of the numbers on one side is equal to the sum of the numbers on the other side.

public boolean canBalance(int[] nums) {
  int lSum = 0;
  for (int i = 0; i < nums.length; i++) {
    lSum += nums[i];
    int rSum = 0;
    for (int j = nums.length-1; j > i; j--) {
      rSum += nums[j];
    }
    if (rSum == lSum)
      return true;
  }
  return false;
}

//Given a map of food keys and their topping values, modify and return the map as follows: if the key "ice cream" has a value, set that as the value for the key "yogurt" also. If the key "spinach" has a value, change that value to "nuts".
public Map<String, String> topping2(Map<String, String> map) {
  if(map.containsKey("ice cream")){
    map.put("ice cream",map.get("ice cream"));
    map.put("yogurt",map.get("ice cream"));
  }
  if(map.containsKey("spinach")){
    map.put("spinach","nuts");
  }
  return map;
}

//Given an array of non-empty strings, return a Map<String, String> with a key for every different first character seen, with the value of all the strings starting with that character appended together in the order they appear in the array.

  public Map<String, String> firstChar(String[] strings) {
  HashMap<String,String> m = new HashMap<String,String>();
  for(int i=0;i<strings.length;i++){
     if(m.containsKey(strings[i].charAt(0)+"")){
      String q=m.get(strings[i].charAt(0)+"")+strings[i];
      m.put(String.valueOf(strings[i].charAt(0)),q);
    }
    else{
      m.put(strings[i].charAt(0)+"",strings[i]);
    }
  }
  return m;
}
